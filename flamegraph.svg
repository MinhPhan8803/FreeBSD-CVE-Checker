<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="422" onload="init(evt)" viewBox="0 0 1200 422" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="422" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="405.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="405.00"> </text><svg id="frames" x="10" width="1180" total_samples="76"><g><title>0x20202020200a3e65 (1 samples, 1.32%)</title><rect x="0.0000%" y="357" width="1.3158%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="367.50"></text></g><g><title>0x2000 (1 samples, 1.32%)</title><rect x="0.0000%" y="341" width="1.3158%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="351.50"></text></g><g><title>CVEParser`&lt;std::fs::File as std::io::Read&gt;::read_buf (1 samples, 1.32%)</title><rect x="0.0000%" y="325" width="1.3158%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="335.50"></text></g><g><title>libc.so.7`_read (1 samples, 1.32%)</title><rect x="0.0000%" y="309" width="1.3158%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="319.50"></text></g><g><title>0x204153464d3e703c (1 samples, 1.32%)</title><rect x="1.3158%" y="357" width="1.3158%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="1.5658%" y="367.50"></text></g><g><title>0x2000 (1 samples, 1.32%)</title><rect x="1.3158%" y="341" width="1.3158%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="1.5658%" y="351.50"></text></g><g><title>CVEParser`&lt;std::fs::File as std::io::Read&gt;::read_buf (1 samples, 1.32%)</title><rect x="1.3158%" y="325" width="1.3158%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="1.5658%" y="335.50"></text></g><g><title>libc.so.7`_read (1 samples, 1.32%)</title><rect x="1.3158%" y="309" width="1.3158%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="1"/><text x="1.5658%" y="319.50"></text></g><g><title>0x206f742065756420 (1 samples, 1.32%)</title><rect x="2.6316%" y="357" width="1.3158%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="1"/><text x="2.8816%" y="367.50"></text></g><g><title>CVEParser`_ZN5alloc7raw_vec11finish_grow17hc39428b7acc2caf2E.llvm.14439420800445611576 (1 samples, 1.32%)</title><rect x="2.6316%" y="341" width="1.3158%" height="15" fill="rgb(220,122,19)" fg:x="2" fg:w="1"/><text x="2.8816%" y="351.50"></text></g><g><title>libc.so.7`realloc (1 samples, 1.32%)</title><rect x="2.6316%" y="325" width="1.3158%" height="15" fill="rgb(250,228,42)" fg:x="2" fg:w="1"/><text x="2.8816%" y="335.50"></text></g><g><title>libc.so.7`0x8013fbefa (1 samples, 1.32%)</title><rect x="2.6316%" y="309" width="1.3158%" height="15" fill="rgb(240,193,28)" fg:x="2" fg:w="1"/><text x="2.8816%" y="319.50"></text></g><g><title>0x206f742073776f6c (1 samples, 1.32%)</title><rect x="3.9474%" y="357" width="1.3158%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="1"/><text x="4.1974%" y="367.50"></text></g><g><title>libc.so.7`memcpy (1 samples, 1.32%)</title><rect x="3.9474%" y="341" width="1.3158%" height="15" fill="rgb(206,188,39)" fg:x="3" fg:w="1"/><text x="4.1974%" y="351.50"></text></g><g><title>0x2073656974696c69 (1 samples, 1.32%)</title><rect x="5.2632%" y="357" width="1.3158%" height="15" fill="rgb(217,207,13)" fg:x="4" fg:w="1"/><text x="5.5132%" y="367.50"></text></g><g><title>0x9b7 (1 samples, 1.32%)</title><rect x="5.2632%" y="341" width="1.3158%" height="15" fill="rgb(231,73,38)" fg:x="4" fg:w="1"/><text x="5.5132%" y="351.50"></text></g><g><title>libc.so.7`memcpy (1 samples, 1.32%)</title><rect x="5.2632%" y="325" width="1.3158%" height="15" fill="rgb(225,20,46)" fg:x="4" fg:w="1"/><text x="5.5132%" y="335.50"></text></g><g><title>0x28a9 (1 samples, 1.32%)</title><rect x="6.5789%" y="357" width="1.3158%" height="15" fill="rgb(210,31,41)" fg:x="5" fg:w="1"/><text x="6.8289%" y="367.50"></text></g><g><title>CVEParser`std::io::stdio::_print (1 samples, 1.32%)</title><rect x="6.5789%" y="341" width="1.3158%" height="15" fill="rgb(221,200,47)" fg:x="5" fg:w="1"/><text x="6.8289%" y="351.50"></text></g><g><title>0x2b2a292827242322 (1 samples, 1.32%)</title><rect x="7.8947%" y="357" width="1.3158%" height="15" fill="rgb(226,26,5)" fg:x="6" fg:w="1"/><text x="8.1447%" y="367.50"></text></g><g><title>CVEParser`_ZN4core5slice4sort7recurse17h80ac35a240646686E.llvm.12439211123297753419 (1 samples, 1.32%)</title><rect x="7.8947%" y="341" width="1.3158%" height="15" fill="rgb(249,33,26)" fg:x="6" fg:w="1"/><text x="8.1447%" y="351.50"></text></g><g><title>0x303863323662223d (1 samples, 1.32%)</title><rect x="9.2105%" y="357" width="1.3158%" height="15" fill="rgb(235,183,28)" fg:x="7" fg:w="1"/><text x="9.4605%" y="367.50"></text></g><g><title>0x9b7 (1 samples, 1.32%)</title><rect x="9.2105%" y="341" width="1.3158%" height="15" fill="rgb(221,5,38)" fg:x="7" fg:w="1"/><text x="9.4605%" y="351.50"></text></g><g><title>CVEParser`&lt;std::fs::File as std::io::Read&gt;::read_buf (1 samples, 1.32%)</title><rect x="9.2105%" y="325" width="1.3158%" height="15" fill="rgb(247,18,42)" fg:x="7" fg:w="1"/><text x="9.4605%" y="335.50"></text></g><g><title>libc.so.7`_read (1 samples, 1.32%)</title><rect x="9.2105%" y="309" width="1.3158%" height="15" fill="rgb(241,131,45)" fg:x="7" fg:w="1"/><text x="9.4605%" y="319.50"></text></g><g><title>0x313130322d455643 (1 samples, 1.32%)</title><rect x="10.5263%" y="357" width="1.3158%" height="15" fill="rgb(249,31,29)" fg:x="8" fg:w="1"/><text x="10.7763%" y="367.50"></text></g><g><title>0x2000 (1 samples, 1.32%)</title><rect x="10.5263%" y="341" width="1.3158%" height="15" fill="rgb(225,111,53)" fg:x="8" fg:w="1"/><text x="10.7763%" y="351.50"></text></g><g><title>CVEParser`&lt;std::fs::File as std::io::Read&gt;::read_buf (1 samples, 1.32%)</title><rect x="10.5263%" y="325" width="1.3158%" height="15" fill="rgb(238,160,17)" fg:x="8" fg:w="1"/><text x="10.7763%" y="335.50"></text></g><g><title>libc.so.7`_read (1 samples, 1.32%)</title><rect x="10.5263%" y="309" width="1.3158%" height="15" fill="rgb(214,148,48)" fg:x="8" fg:w="1"/><text x="10.7763%" y="319.50"></text></g><g><title>0x323e7972746e653c (1 samples, 1.32%)</title><rect x="11.8421%" y="357" width="1.3158%" height="15" fill="rgb(232,36,49)" fg:x="9" fg:w="1"/><text x="12.0921%" y="367.50"></text></g><g><title>0x2000 (1 samples, 1.32%)</title><rect x="11.8421%" y="341" width="1.3158%" height="15" fill="rgb(209,103,24)" fg:x="9" fg:w="1"/><text x="12.0921%" y="351.50"></text></g><g><title>CVEParser`__rust_alloc (1 samples, 1.32%)</title><rect x="11.8421%" y="325" width="1.3158%" height="15" fill="rgb(229,88,8)" fg:x="9" fg:w="1"/><text x="12.0921%" y="335.50"></text></g><g><title>0x373331396435223d (1 samples, 1.32%)</title><rect x="13.1579%" y="357" width="1.3158%" height="15" fill="rgb(213,181,19)" fg:x="10" fg:w="1"/><text x="13.4079%" y="367.50"></text></g><g><title>0x9b7 (1 samples, 1.32%)</title><rect x="13.1579%" y="341" width="1.3158%" height="15" fill="rgb(254,191,54)" fg:x="10" fg:w="1"/><text x="13.4079%" y="351.50"></text></g><g><title>CVEParser`&lt;std::fs::File as std::io::Read&gt;::read_buf (1 samples, 1.32%)</title><rect x="13.1579%" y="325" width="1.3158%" height="15" fill="rgb(241,83,37)" fg:x="10" fg:w="1"/><text x="13.4079%" y="335.50"></text></g><g><title>libc.so.7`_read (1 samples, 1.32%)</title><rect x="13.1579%" y="309" width="1.3158%" height="15" fill="rgb(233,36,39)" fg:x="10" fg:w="1"/><text x="13.4079%" y="319.50"></text></g><g><title>CVEParser`&lt;std::fs::File as std::io::Read&gt;::read_buf (1 samples, 1.32%)</title><rect x="14.4737%" y="325" width="1.3158%" height="15" fill="rgb(226,3,54)" fg:x="11" fg:w="1"/><text x="14.7237%" y="335.50"></text></g><g><title>libc.so.7`_read (1 samples, 1.32%)</title><rect x="14.4737%" y="309" width="1.3158%" height="15" fill="rgb(245,192,40)" fg:x="11" fg:w="1"/><text x="14.7237%" y="319.50"></text></g><g><title>0x3c2020202020200a (2 samples, 2.63%)</title><rect x="14.4737%" y="357" width="2.6316%" height="15" fill="rgb(238,167,29)" fg:x="11" fg:w="2"/><text x="14.7237%" y="367.50">0x..</text></g><g><title>0x2000 (2 samples, 2.63%)</title><rect x="14.4737%" y="341" width="2.6316%" height="15" fill="rgb(232,182,51)" fg:x="11" fg:w="2"/><text x="14.7237%" y="351.50">0x..</text></g><g><title>CVEParser`CVEParser::parse_cve_xml_stax (1 samples, 1.32%)</title><rect x="15.7895%" y="325" width="1.3158%" height="15" fill="rgb(231,60,39)" fg:x="12" fg:w="1"/><text x="16.0395%" y="335.50"></text></g><g><title>libc.so.7`0x8013ed45c (1 samples, 1.32%)</title><rect x="15.7895%" y="309" width="1.3158%" height="15" fill="rgb(208,69,12)" fg:x="12" fg:w="1"/><text x="16.0395%" y="319.50"></text></g><g><title>libc.so.7`0x80143af75 (1 samples, 1.32%)</title><rect x="15.7895%" y="293" width="1.3158%" height="15" fill="rgb(235,93,37)" fg:x="12" fg:w="1"/><text x="16.0395%" y="303.50"></text></g><g><title>libc.so.7`0x8013fa29d (1 samples, 1.32%)</title><rect x="15.7895%" y="277" width="1.3158%" height="15" fill="rgb(213,116,39)" fg:x="12" fg:w="1"/><text x="16.0395%" y="287.50"></text></g><g><title>0x3d65746963206574 (2 samples, 2.63%)</title><rect x="17.1053%" y="357" width="2.6316%" height="15" fill="rgb(222,207,29)" fg:x="13" fg:w="2"/><text x="17.3553%" y="367.50">0x..</text></g><g><title>0x9b7 (2 samples, 2.63%)</title><rect x="17.1053%" y="341" width="2.6316%" height="15" fill="rgb(206,96,30)" fg:x="13" fg:w="2"/><text x="17.3553%" y="351.50">0x..</text></g><g><title>CVEParser`&lt;std::fs::File as std::io::Read&gt;::read_buf (2 samples, 2.63%)</title><rect x="17.1053%" y="325" width="2.6316%" height="15" fill="rgb(218,138,4)" fg:x="13" fg:w="2"/><text x="17.3553%" y="335.50">CV..</text></g><g><title>libc.so.7`_read (2 samples, 2.63%)</title><rect x="17.1053%" y="309" width="2.6316%" height="15" fill="rgb(250,191,14)" fg:x="13" fg:w="2"/><text x="17.3553%" y="319.50">li..</text></g><g><title>0x433e656d616e6576 (1 samples, 1.32%)</title><rect x="19.7368%" y="357" width="1.3158%" height="15" fill="rgb(239,60,40)" fg:x="15" fg:w="1"/><text x="19.9868%" y="367.50"></text></g><g><title>0x2000 (1 samples, 1.32%)</title><rect x="19.7368%" y="341" width="1.3158%" height="15" fill="rgb(206,27,48)" fg:x="15" fg:w="1"/><text x="19.9868%" y="351.50"></text></g><g><title>CVEParser`&lt;std::fs::File as std::io::Read&gt;::read_buf (1 samples, 1.32%)</title><rect x="19.7368%" y="325" width="1.3158%" height="15" fill="rgb(225,35,8)" fg:x="15" fg:w="1"/><text x="19.9868%" y="335.50"></text></g><g><title>libc.so.7`_read (1 samples, 1.32%)</title><rect x="19.7368%" y="309" width="1.3158%" height="15" fill="rgb(250,213,24)" fg:x="15" fg:w="1"/><text x="19.9868%" y="319.50"></text></g><g><title>0x4556433e656d616e (1 samples, 1.32%)</title><rect x="21.0526%" y="357" width="1.3158%" height="15" fill="rgb(247,123,22)" fg:x="16" fg:w="1"/><text x="21.3026%" y="367.50"></text></g><g><title>0x2000 (1 samples, 1.32%)</title><rect x="21.0526%" y="341" width="1.3158%" height="15" fill="rgb(231,138,38)" fg:x="16" fg:w="1"/><text x="21.3026%" y="351.50"></text></g><g><title>CVEParser`CVEParser::parse_cve_xml_stax (1 samples, 1.32%)</title><rect x="21.0526%" y="325" width="1.3158%" height="15" fill="rgb(231,145,46)" fg:x="16" fg:w="1"/><text x="21.3026%" y="335.50"></text></g><g><title>0x4e4a20326e6f6974 (2 samples, 2.63%)</title><rect x="22.3684%" y="357" width="2.6316%" height="15" fill="rgb(251,118,11)" fg:x="17" fg:w="2"/><text x="22.6184%" y="367.50">0x..</text></g><g><title>0x9b7 (2 samples, 2.63%)</title><rect x="22.3684%" y="341" width="2.6316%" height="15" fill="rgb(217,147,25)" fg:x="17" fg:w="2"/><text x="22.6184%" y="351.50">0x..</text></g><g><title>CVEParser`&lt;std::fs::File as std::io::Read&gt;::read_buf (2 samples, 2.63%)</title><rect x="22.3684%" y="325" width="2.6316%" height="15" fill="rgb(247,81,37)" fg:x="17" fg:w="2"/><text x="22.6184%" y="335.50">CV..</text></g><g><title>libc.so.7`_read (2 samples, 2.63%)</title><rect x="22.3684%" y="309" width="2.6316%" height="15" fill="rgb(209,12,38)" fg:x="17" fg:w="2"/><text x="22.6184%" y="319.50">li..</text></g><g><title>0x5643206867694820 (1 samples, 1.32%)</title><rect x="25.0000%" y="357" width="1.3158%" height="15" fill="rgb(227,1,9)" fg:x="19" fg:w="1"/><text x="25.2500%" y="367.50"></text></g><g><title>0x9b7 (1 samples, 1.32%)</title><rect x="25.0000%" y="341" width="1.3158%" height="15" fill="rgb(248,47,43)" fg:x="19" fg:w="1"/><text x="25.2500%" y="351.50"></text></g><g><title>CVEParser`&lt;R as quick_xml::reader::XmlSource&lt;&amp;mut alloc::vec::Vec&lt;u8&gt;&gt;&gt;::skip_whitespace (1 samples, 1.32%)</title><rect x="25.0000%" y="325" width="1.3158%" height="15" fill="rgb(221,10,30)" fg:x="19" fg:w="1"/><text x="25.2500%" y="335.50"></text></g><g><title>0x616568742e733764 (1 samples, 1.32%)</title><rect x="26.3158%" y="357" width="1.3158%" height="15" fill="rgb(210,229,1)" fg:x="20" fg:w="1"/><text x="26.5658%" y="367.50"></text></g><g><title>0x9b7 (1 samples, 1.32%)</title><rect x="26.3158%" y="341" width="1.3158%" height="15" fill="rgb(222,148,37)" fg:x="20" fg:w="1"/><text x="26.5658%" y="351.50"></text></g><g><title>CVEParser`&lt;std::fs::File as std::io::Read&gt;::read_buf (1 samples, 1.32%)</title><rect x="26.3158%" y="325" width="1.3158%" height="15" fill="rgb(234,67,33)" fg:x="20" fg:w="1"/><text x="26.5658%" y="335.50"></text></g><g><title>libc.so.7`_read (1 samples, 1.32%)</title><rect x="26.3158%" y="309" width="1.3158%" height="15" fill="rgb(247,98,35)" fg:x="20" fg:w="1"/><text x="26.5658%" y="319.50"></text></g><g><title>0x616e6576633c2020 (1 samples, 1.32%)</title><rect x="27.6316%" y="357" width="1.3158%" height="15" fill="rgb(247,138,52)" fg:x="21" fg:w="1"/><text x="27.8816%" y="367.50"></text></g><g><title>0x2000 (1 samples, 1.32%)</title><rect x="27.6316%" y="341" width="1.3158%" height="15" fill="rgb(213,79,30)" fg:x="21" fg:w="1"/><text x="27.8816%" y="351.50"></text></g><g><title>CVEParser`&lt;std::fs::File as std::io::Read&gt;::read_buf (1 samples, 1.32%)</title><rect x="27.6316%" y="325" width="1.3158%" height="15" fill="rgb(246,177,23)" fg:x="21" fg:w="1"/><text x="27.8816%" y="335.50"></text></g><g><title>libc.so.7`_read (1 samples, 1.32%)</title><rect x="27.6316%" y="309" width="1.3158%" height="15" fill="rgb(230,62,27)" fg:x="21" fg:w="1"/><text x="27.8816%" y="319.50"></text></g><g><title>0x617265 (1 samples, 1.32%)</title><rect x="28.9474%" y="357" width="1.3158%" height="15" fill="rgb(216,154,8)" fg:x="22" fg:w="1"/><text x="29.1974%" y="367.50"></text></g><g><title>0xb (1 samples, 1.32%)</title><rect x="28.9474%" y="341" width="1.3158%" height="15" fill="rgb(244,35,45)" fg:x="22" fg:w="1"/><text x="29.1974%" y="351.50"></text></g><g><title>CVEParser`_ZN4core3ptr35drop_in_place$LT$CVEParser..CVE$GT$17hdb9781d18a71fad5E.llvm.16892201213623201211 (1 samples, 1.32%)</title><rect x="28.9474%" y="325" width="1.3158%" height="15" fill="rgb(251,115,12)" fg:x="22" fg:w="1"/><text x="29.1974%" y="335.50"></text></g><g><title>libc.so.7`0x8013eff17 (1 samples, 1.32%)</title><rect x="28.9474%" y="309" width="1.3158%" height="15" fill="rgb(240,54,50)" fg:x="22" fg:w="1"/><text x="29.1974%" y="319.50"></text></g><g><title>libc.so.7`0x80143a77d (1 samples, 1.32%)</title><rect x="28.9474%" y="293" width="1.3158%" height="15" fill="rgb(233,84,52)" fg:x="22" fg:w="1"/><text x="29.1974%" y="303.50"></text></g><g><title>libc.so.7`0x8013fb164 (1 samples, 1.32%)</title><rect x="28.9474%" y="277" width="1.3158%" height="15" fill="rgb(207,117,47)" fg:x="22" fg:w="1"/><text x="29.1974%" y="287.50"></text></g><g><title>libc.so.7`0x8013fb194 (1 samples, 1.32%)</title><rect x="28.9474%" y="261" width="1.3158%" height="15" fill="rgb(249,43,39)" fg:x="22" fg:w="1"/><text x="29.1974%" y="271.50"></text></g><g><title>0x636573206e696d64 (1 samples, 1.32%)</title><rect x="30.2632%" y="357" width="1.3158%" height="15" fill="rgb(209,38,44)" fg:x="23" fg:w="1"/><text x="30.5132%" y="367.50"></text></g><g><title>CVEParser`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 1.32%)</title><rect x="30.2632%" y="341" width="1.3158%" height="15" fill="rgb(236,212,23)" fg:x="23" fg:w="1"/><text x="30.5132%" y="351.50"></text></g><g><title>0x65696c632073756f (1 samples, 1.32%)</title><rect x="31.5789%" y="357" width="1.3158%" height="15" fill="rgb(242,79,21)" fg:x="24" fg:w="1"/><text x="31.8289%" y="367.50"></text></g><g><title>libc.so.7`memcpy (1 samples, 1.32%)</title><rect x="31.5789%" y="341" width="1.3158%" height="15" fill="rgb(211,96,35)" fg:x="24" fg:w="1"/><text x="31.8289%" y="351.50"></text></g><g><title>0x6572727563207374 (1 samples, 1.32%)</title><rect x="32.8947%" y="357" width="1.3158%" height="15" fill="rgb(253,215,40)" fg:x="25" fg:w="1"/><text x="33.1447%" y="367.50"></text></g><g><title>0x2000 (1 samples, 1.32%)</title><rect x="32.8947%" y="341" width="1.3158%" height="15" fill="rgb(211,81,21)" fg:x="25" fg:w="1"/><text x="33.1447%" y="351.50"></text></g><g><title>CVEParser`core::str::converts::from_utf8 (1 samples, 1.32%)</title><rect x="32.8947%" y="325" width="1.3158%" height="15" fill="rgb(208,190,38)" fg:x="25" fg:w="1"/><text x="33.1447%" y="335.50"></text></g><g><title>0x65 (1 samples, 1.32%)</title><rect x="34.2105%" y="357" width="1.3158%" height="15" fill="rgb(235,213,38)" fg:x="26" fg:w="1"/><text x="34.4605%" y="367.50"></text></g><g><title>0x9 (1 samples, 1.32%)</title><rect x="34.2105%" y="341" width="1.3158%" height="15" fill="rgb(237,122,38)" fg:x="26" fg:w="1"/><text x="34.4605%" y="351.50"></text></g><g><title>CVEParser`_ZN4core3ptr35drop_in_place$LT$CVEParser..CVE$GT$17hdb9781d18a71fad5E.llvm.16892201213623201211 (1 samples, 1.32%)</title><rect x="34.2105%" y="325" width="1.3158%" height="15" fill="rgb(244,218,35)" fg:x="26" fg:w="1"/><text x="34.4605%" y="335.50"></text></g><g><title>libc.so.7`free (1 samples, 1.32%)</title><rect x="34.2105%" y="309" width="1.3158%" height="15" fill="rgb(240,68,47)" fg:x="26" fg:w="1"/><text x="34.4605%" y="319.50"></text></g><g><title>0x66646e7362696c2d (1 samples, 1.32%)</title><rect x="35.5263%" y="357" width="1.3158%" height="15" fill="rgb(210,16,53)" fg:x="27" fg:w="1"/><text x="35.7763%" y="367.50"></text></g><g><title>0x13 (1 samples, 1.32%)</title><rect x="35.5263%" y="341" width="1.3158%" height="15" fill="rgb(235,124,12)" fg:x="27" fg:w="1"/><text x="35.7763%" y="351.50"></text></g><g><title>libc.so.7`memcmp (1 samples, 1.32%)</title><rect x="35.5263%" y="325" width="1.3158%" height="15" fill="rgb(224,169,11)" fg:x="27" fg:w="1"/><text x="35.7763%" y="335.50"></text></g><g><title>0x687469776e6f7365 (1 samples, 1.32%)</title><rect x="36.8421%" y="357" width="1.3158%" height="15" fill="rgb(250,166,2)" fg:x="28" fg:w="1"/><text x="37.0921%" y="367.50"></text></g><g><title>0x9b7 (1 samples, 1.32%)</title><rect x="36.8421%" y="341" width="1.3158%" height="15" fill="rgb(242,216,29)" fg:x="28" fg:w="1"/><text x="37.0921%" y="351.50"></text></g><g><title>CVEParser`quick_xml::reader::Reader&lt;R&gt;::read_event_buffered (1 samples, 1.32%)</title><rect x="36.8421%" y="325" width="1.3158%" height="15" fill="rgb(230,116,27)" fg:x="28" fg:w="1"/><text x="37.0921%" y="335.50"></text></g><g><title>0x6c3c3e65676e6172 (1 samples, 1.32%)</title><rect x="38.1579%" y="357" width="1.3158%" height="15" fill="rgb(228,99,48)" fg:x="29" fg:w="1"/><text x="38.4079%" y="367.50"></text></g><g><title>0x2000 (1 samples, 1.32%)</title><rect x="38.1579%" y="341" width="1.3158%" height="15" fill="rgb(253,11,6)" fg:x="29" fg:w="1"/><text x="38.4079%" y="351.50"></text></g><g><title>CVEParser`CVEParser::parse_cve_xml_stax (1 samples, 1.32%)</title><rect x="38.1579%" y="325" width="1.3158%" height="15" fill="rgb(247,143,39)" fg:x="29" fg:w="1"/><text x="38.4079%" y="335.50"></text></g><g><title>libc.so.7`malloc (1 samples, 1.32%)</title><rect x="38.1579%" y="309" width="1.3158%" height="15" fill="rgb(236,97,10)" fg:x="29" fg:w="1"/><text x="38.4079%" y="319.50"></text></g><g><title>0x6c622f3c090a3e70 (1 samples, 1.32%)</title><rect x="39.4737%" y="357" width="1.3158%" height="15" fill="rgb(233,208,19)" fg:x="30" fg:w="1"/><text x="39.7237%" y="367.50"></text></g><g><title>0x2000 (1 samples, 1.32%)</title><rect x="39.4737%" y="341" width="1.3158%" height="15" fill="rgb(216,164,2)" fg:x="30" fg:w="1"/><text x="39.7237%" y="351.50"></text></g><g><title>CVEParser`CVEParser::parse_cve_xml_stax (1 samples, 1.32%)</title><rect x="39.4737%" y="325" width="1.3158%" height="15" fill="rgb(220,129,5)" fg:x="30" fg:w="1"/><text x="39.7237%" y="335.50"></text></g><g><title>libc.so.7`0x80143af60 (1 samples, 1.32%)</title><rect x="39.4737%" y="309" width="1.3158%" height="15" fill="rgb(242,17,10)" fg:x="30" fg:w="1"/><text x="39.7237%" y="319.50"></text></g><g><title>0x6c656e72656b (1 samples, 1.32%)</title><rect x="40.7895%" y="357" width="1.3158%" height="15" fill="rgb(242,107,0)" fg:x="31" fg:w="1"/><text x="41.0395%" y="367.50"></text></g><g><title>0xe (1 samples, 1.32%)</title><rect x="40.7895%" y="341" width="1.3158%" height="15" fill="rgb(251,28,31)" fg:x="31" fg:w="1"/><text x="41.0395%" y="351.50"></text></g><g><title>CVEParser`_ZN4core3ptr35drop_in_place$LT$CVEParser..CVE$GT$17hdb9781d18a71fad5E.llvm.16892201213623201211 (1 samples, 1.32%)</title><rect x="40.7895%" y="325" width="1.3158%" height="15" fill="rgb(233,223,10)" fg:x="31" fg:w="1"/><text x="41.0395%" y="335.50"></text></g><g><title>0x6c6d7468782f3939 (1 samples, 1.32%)</title><rect x="42.1053%" y="357" width="1.3158%" height="15" fill="rgb(215,21,27)" fg:x="32" fg:w="1"/><text x="42.3553%" y="367.50"></text></g><g><title>0x2000 (1 samples, 1.32%)</title><rect x="42.1053%" y="341" width="1.3158%" height="15" fill="rgb(232,23,21)" fg:x="32" fg:w="1"/><text x="42.3553%" y="351.50"></text></g><g><title>CVEParser`CVEParser::parse_cve_xml_stax (1 samples, 1.32%)</title><rect x="42.1053%" y="325" width="1.3158%" height="15" fill="rgb(244,5,23)" fg:x="32" fg:w="1"/><text x="42.3553%" y="335.50"></text></g><g><title>libc.so.7`0x8013ed45c (1 samples, 1.32%)</title><rect x="42.1053%" y="309" width="1.3158%" height="15" fill="rgb(226,81,46)" fg:x="32" fg:w="1"/><text x="42.3553%" y="319.50"></text></g><g><title>libc.so.7`0x80143af75 (1 samples, 1.32%)</title><rect x="42.1053%" y="293" width="1.3158%" height="15" fill="rgb(247,70,30)" fg:x="32" fg:w="1"/><text x="42.3553%" y="303.50"></text></g><g><title>libc.so.7`0x8013fa386 (1 samples, 1.32%)</title><rect x="42.1053%" y="277" width="1.3158%" height="15" fill="rgb(212,68,19)" fg:x="32" fg:w="1"/><text x="42.3553%" y="287.50"></text></g><g><title>libc.so.7`0x8013fa624 (1 samples, 1.32%)</title><rect x="42.1053%" y="261" width="1.3158%" height="15" fill="rgb(240,187,13)" fg:x="32" fg:w="1"/><text x="42.3553%" y="271.50"></text></g><g><title>libc.so.7`0x80141c2f9 (1 samples, 1.32%)</title><rect x="42.1053%" y="245" width="1.3158%" height="15" fill="rgb(223,113,26)" fg:x="32" fg:w="1"/><text x="42.3553%" y="255.50"></text></g><g><title>libc.so.7`0x80141c99c (1 samples, 1.32%)</title><rect x="42.1053%" y="229" width="1.3158%" height="15" fill="rgb(206,192,2)" fg:x="32" fg:w="1"/><text x="42.3553%" y="239.50"></text></g><g><title>libc.so.7`0x80141ae67 (1 samples, 1.32%)</title><rect x="42.1053%" y="213" width="1.3158%" height="15" fill="rgb(241,108,4)" fg:x="32" fg:w="1"/><text x="42.3553%" y="223.50"></text></g><g><title>0x6c7069746c6e6f69 (1 samples, 1.32%)</title><rect x="43.4211%" y="357" width="1.3158%" height="15" fill="rgb(247,173,49)" fg:x="33" fg:w="1"/><text x="43.6711%" y="367.50"></text></g><g><title>0x9b7 (1 samples, 1.32%)</title><rect x="43.4211%" y="341" width="1.3158%" height="15" fill="rgb(224,114,35)" fg:x="33" fg:w="1"/><text x="43.6711%" y="351.50"></text></g><g><title>CVEParser`&lt;std::fs::File as std::io::Read&gt;::read_buf (1 samples, 1.32%)</title><rect x="43.4211%" y="325" width="1.3158%" height="15" fill="rgb(245,159,27)" fg:x="33" fg:w="1"/><text x="43.6711%" y="335.50"></text></g><g><title>libc.so.7`_read (1 samples, 1.32%)</title><rect x="43.4211%" y="309" width="1.3158%" height="15" fill="rgb(245,172,44)" fg:x="33" fg:w="1"/><text x="43.6711%" y="319.50"></text></g><g><title>0x6d656d2070616568 (1 samples, 1.32%)</title><rect x="44.7368%" y="357" width="1.3158%" height="15" fill="rgb(236,23,11)" fg:x="34" fg:w="1"/><text x="44.9868%" y="367.50"></text></g><g><title>0x9b7 (1 samples, 1.32%)</title><rect x="44.7368%" y="341" width="1.3158%" height="15" fill="rgb(205,117,38)" fg:x="34" fg:w="1"/><text x="44.9868%" y="351.50"></text></g><g><title>CVEParser`&lt;std::fs::File as std::io::Read&gt;::read_buf (1 samples, 1.32%)</title><rect x="44.7368%" y="325" width="1.3158%" height="15" fill="rgb(237,72,25)" fg:x="34" fg:w="1"/><text x="44.9868%" y="335.50"></text></g><g><title>libc.so.7`_read (1 samples, 1.32%)</title><rect x="44.7368%" y="309" width="1.3158%" height="15" fill="rgb(244,70,9)" fg:x="34" fg:w="1"/><text x="44.9868%" y="319.50"></text></g><g><title>0x6e6f697470697263 (1 samples, 1.32%)</title><rect x="46.0526%" y="357" width="1.3158%" height="15" fill="rgb(217,125,39)" fg:x="35" fg:w="1"/><text x="46.3026%" y="367.50"></text></g><g><title>0x2000 (1 samples, 1.32%)</title><rect x="46.0526%" y="341" width="1.3158%" height="15" fill="rgb(235,36,10)" fg:x="35" fg:w="1"/><text x="46.3026%" y="351.50"></text></g><g><title>CVEParser`CVEParser::parse_cve_xml_stax (1 samples, 1.32%)</title><rect x="46.0526%" y="325" width="1.3158%" height="15" fill="rgb(251,123,47)" fg:x="35" fg:w="1"/><text x="46.3026%" y="335.50"></text></g><g><title>0x6f6d6572202d2d32 (1 samples, 1.32%)</title><rect x="47.3684%" y="357" width="1.3158%" height="15" fill="rgb(221,13,13)" fg:x="36" fg:w="1"/><text x="47.6184%" y="367.50"></text></g><g><title>0x9b7 (1 samples, 1.32%)</title><rect x="47.3684%" y="341" width="1.3158%" height="15" fill="rgb(238,131,9)" fg:x="36" fg:w="1"/><text x="47.6184%" y="351.50"></text></g><g><title>CVEParser`quick_xml::reader::Reader&lt;R&gt;::read_event_buffered (1 samples, 1.32%)</title><rect x="47.3684%" y="325" width="1.3158%" height="15" fill="rgb(211,50,8)" fg:x="36" fg:w="1"/><text x="47.6184%" y="335.50"></text></g><g><title>0x6f6e2f34312f3330 (1 samples, 1.32%)</title><rect x="48.6842%" y="357" width="1.3158%" height="15" fill="rgb(245,182,24)" fg:x="37" fg:w="1"/><text x="48.9342%" y="367.50"></text></g><g><title>0x2000 (1 samples, 1.32%)</title><rect x="48.6842%" y="341" width="1.3158%" height="15" fill="rgb(242,14,37)" fg:x="37" fg:w="1"/><text x="48.9342%" y="351.50"></text></g><g><title>CVEParser`&lt;std::fs::File as std::io::Read&gt;::read_buf (1 samples, 1.32%)</title><rect x="48.6842%" y="325" width="1.3158%" height="15" fill="rgb(246,228,12)" fg:x="37" fg:w="1"/><text x="48.9342%" y="335.50"></text></g><g><title>libc.so.7`_read (1 samples, 1.32%)</title><rect x="48.6842%" y="309" width="1.3158%" height="15" fill="rgb(213,55,15)" fg:x="37" fg:w="1"/><text x="48.9342%" y="319.50"></text></g><g><title>0x72637365643c2020 (1 samples, 1.32%)</title><rect x="50.0000%" y="357" width="1.3158%" height="15" fill="rgb(209,9,3)" fg:x="38" fg:w="1"/><text x="50.2500%" y="367.50"></text></g><g><title>0x2000 (1 samples, 1.32%)</title><rect x="50.0000%" y="341" width="1.3158%" height="15" fill="rgb(230,59,30)" fg:x="38" fg:w="1"/><text x="50.2500%" y="351.50"></text></g><g><title>CVEParser`&lt;std::fs::File as std::io::Read&gt;::read_buf (1 samples, 1.32%)</title><rect x="50.0000%" y="325" width="1.3158%" height="15" fill="rgb(209,121,21)" fg:x="38" fg:w="1"/><text x="50.2500%" y="335.50"></text></g><g><title>libc.so.7`_read (1 samples, 1.32%)</title><rect x="50.0000%" y="309" width="1.3158%" height="15" fill="rgb(220,109,13)" fg:x="38" fg:w="1"/><text x="50.2500%" y="319.50"></text></g><g><title>0x7265732d32396c71 (1 samples, 1.32%)</title><rect x="51.3158%" y="357" width="1.3158%" height="15" fill="rgb(232,18,1)" fg:x="39" fg:w="1"/><text x="51.5658%" y="367.50"></text></g><g><title>0x13 (1 samples, 1.32%)</title><rect x="51.3158%" y="341" width="1.3158%" height="15" fill="rgb(215,41,42)" fg:x="39" fg:w="1"/><text x="51.5658%" y="351.50"></text></g><g><title>CVEParser`_ZN4core3ptr35drop_in_place$LT$CVEParser..CVE$GT$17hdb9781d18a71fad5E.llvm.16892201213623201211 (1 samples, 1.32%)</title><rect x="51.3158%" y="325" width="1.3158%" height="15" fill="rgb(224,123,36)" fg:x="39" fg:w="1"/><text x="51.5658%" y="335.50"></text></g><g><title>libc.so.7`free (1 samples, 1.32%)</title><rect x="51.3158%" y="309" width="1.3158%" height="15" fill="rgb(240,125,3)" fg:x="39" fg:w="1"/><text x="51.5658%" y="319.50"></text></g><g><title>0x7365643c20202020 (1 samples, 1.32%)</title><rect x="52.6316%" y="357" width="1.3158%" height="15" fill="rgb(205,98,50)" fg:x="40" fg:w="1"/><text x="52.8816%" y="367.50"></text></g><g><title>0x2000 (1 samples, 1.32%)</title><rect x="52.6316%" y="341" width="1.3158%" height="15" fill="rgb(205,185,37)" fg:x="40" fg:w="1"/><text x="52.8816%" y="351.50"></text></g><g><title>CVEParser`&lt;std::fs::File as std::io::Read&gt;::read_buf (1 samples, 1.32%)</title><rect x="52.6316%" y="325" width="1.3158%" height="15" fill="rgb(238,207,15)" fg:x="40" fg:w="1"/><text x="52.8816%" y="335.50"></text></g><g><title>libc.so.7`_read (1 samples, 1.32%)</title><rect x="52.6316%" y="309" width="1.3158%" height="15" fill="rgb(213,199,42)" fg:x="40" fg:w="1"/><text x="52.8816%" y="319.50"></text></g><g><title>0x73756f6972615620 (1 samples, 1.32%)</title><rect x="53.9474%" y="357" width="1.3158%" height="15" fill="rgb(235,201,11)" fg:x="41" fg:w="1"/><text x="54.1974%" y="367.50"></text></g><g><title>0x9b7 (1 samples, 1.32%)</title><rect x="53.9474%" y="341" width="1.3158%" height="15" fill="rgb(207,46,11)" fg:x="41" fg:w="1"/><text x="54.1974%" y="351.50"></text></g><g><title>CVEParser`&lt;R as quick_xml::reader::XmlSource&lt;&amp;mut alloc::vec::Vec&lt;u8&gt;&gt;&gt;::peek_one (1 samples, 1.32%)</title><rect x="53.9474%" y="325" width="1.3158%" height="15" fill="rgb(241,35,35)" fg:x="41" fg:w="1"/><text x="54.1974%" y="335.50"></text></g><g><title>0x7461642f3c202020 (1 samples, 1.32%)</title><rect x="55.2632%" y="357" width="1.3158%" height="15" fill="rgb(243,32,47)" fg:x="42" fg:w="1"/><text x="55.5132%" y="367.50"></text></g><g><title>0x2000 (1 samples, 1.32%)</title><rect x="55.2632%" y="341" width="1.3158%" height="15" fill="rgb(247,202,23)" fg:x="42" fg:w="1"/><text x="55.5132%" y="351.50"></text></g><g><title>CVEParser`&lt;std::fs::File as std::io::Read&gt;::read_buf (1 samples, 1.32%)</title><rect x="55.2632%" y="325" width="1.3158%" height="15" fill="rgb(219,102,11)" fg:x="42" fg:w="1"/><text x="55.5132%" y="335.50"></text></g><g><title>libc.so.7`_read (1 samples, 1.32%)</title><rect x="55.2632%" y="309" width="1.3158%" height="15" fill="rgb(243,110,44)" fg:x="42" fg:w="1"/><text x="55.5132%" y="319.50"></text></g><g><title>0x786966206e6f7365 (1 samples, 1.32%)</title><rect x="56.5789%" y="357" width="1.3158%" height="15" fill="rgb(222,74,54)" fg:x="43" fg:w="1"/><text x="56.8289%" y="367.50"></text></g><g><title>0x9b7 (1 samples, 1.32%)</title><rect x="56.5789%" y="341" width="1.3158%" height="15" fill="rgb(216,99,12)" fg:x="43" fg:w="1"/><text x="56.8289%" y="351.50"></text></g><g><title>CVEParser`&lt;std::fs::File as std::io::Read&gt;::read_buf (1 samples, 1.32%)</title><rect x="56.5789%" y="325" width="1.3158%" height="15" fill="rgb(226,22,26)" fg:x="43" fg:w="1"/><text x="56.8289%" y="335.50"></text></g><g><title>libc.so.7`_read (1 samples, 1.32%)</title><rect x="56.5789%" y="309" width="1.3158%" height="15" fill="rgb(217,163,10)" fg:x="43" fg:w="1"/><text x="56.8289%" y="319.50"></text></g><g><title>0x7fffffffe2580000 (1 samples, 1.32%)</title><rect x="57.8947%" y="357" width="1.3158%" height="15" fill="rgb(213,25,53)" fg:x="44" fg:w="1"/><text x="58.1447%" y="367.50"></text></g><g><title>libc.so.7`memcmp (1 samples, 1.32%)</title><rect x="57.8947%" y="341" width="1.3158%" height="15" fill="rgb(252,105,26)" fg:x="44" fg:w="1"/><text x="58.1447%" y="351.50"></text></g><g><title>CVEParser`&lt;R as quick_xml::reader::XmlSource&lt;&amp;mut alloc::vec::Vec&lt;u8&gt;&gt;&gt;::read_bytes_until (1 samples, 1.32%)</title><rect x="59.2105%" y="357" width="1.3158%" height="15" fill="rgb(220,39,43)" fg:x="45" fg:w="1"/><text x="59.4605%" y="367.50"></text></g><g><title>CVEParser`&lt;R as quick_xml::reader::XmlSource&lt;&amp;mut alloc::vec::Vec&lt;u8&gt;&gt;&gt;::skip_whitespace (3 samples, 3.95%)</title><rect x="60.5263%" y="357" width="3.9474%" height="15" fill="rgb(229,68,48)" fg:x="46" fg:w="3"/><text x="60.7763%" y="367.50">CVEP..</text></g><g><title>CVEParser`&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (1 samples, 1.32%)</title><rect x="64.4737%" y="357" width="1.3158%" height="15" fill="rgb(252,8,32)" fg:x="49" fg:w="1"/><text x="64.7237%" y="367.50"></text></g><g><title>CVEParser`&lt;std::fs::File as std::io::Read&gt;::read_buf (1 samples, 1.32%)</title><rect x="65.7895%" y="357" width="1.3158%" height="15" fill="rgb(223,20,43)" fg:x="50" fg:w="1"/><text x="66.0395%" y="367.50"></text></g><g><title>libc.so.7`_read (1 samples, 1.32%)</title><rect x="65.7895%" y="341" width="1.3158%" height="15" fill="rgb(229,81,49)" fg:x="50" fg:w="1"/><text x="66.0395%" y="351.50"></text></g><g><title>CVEParser`CVEParser::parse_cve_xml_stax (3 samples, 3.95%)</title><rect x="67.1053%" y="357" width="3.9474%" height="15" fill="rgb(236,28,36)" fg:x="51" fg:w="3"/><text x="67.3553%" y="367.50">CVEP..</text></g><g><title>CVEParser`core::str::converts::from_utf8 (1 samples, 1.32%)</title><rect x="71.0526%" y="357" width="1.3158%" height="15" fill="rgb(249,185,26)" fg:x="54" fg:w="1"/><text x="71.3026%" y="367.50"></text></g><g><title>CVEParser`memchr::memchr::x86::avx::memchr (1 samples, 1.32%)</title><rect x="72.3684%" y="357" width="1.3158%" height="15" fill="rgb(249,174,33)" fg:x="55" fg:w="1"/><text x="72.6184%" y="367.50"></text></g><g><title>CVEParser`quick_xml::reader::Reader&lt;R&gt;::read_event_buffered (10 samples, 13.16%)</title><rect x="73.6842%" y="357" width="13.1579%" height="15" fill="rgb(233,201,37)" fg:x="56" fg:w="10"/><text x="73.9342%" y="367.50">CVEParser`quick_xml:..</text></g><g><title>CVEParser`rusqlite::inner_connection::InnerConnection::close (1 samples, 1.32%)</title><rect x="86.8421%" y="357" width="1.3158%" height="15" fill="rgb(221,78,26)" fg:x="66" fg:w="1"/><text x="87.0921%" y="367.50"></text></g><g><title>CVEParser`sqlite3Close (1 samples, 1.32%)</title><rect x="86.8421%" y="341" width="1.3158%" height="15" fill="rgb(250,127,30)" fg:x="66" fg:w="1"/><text x="87.0921%" y="351.50"></text></g><g><title>CVEParser`sqlite3LeaveMutexAndCloseZombie (1 samples, 1.32%)</title><rect x="86.8421%" y="325" width="1.3158%" height="15" fill="rgb(230,49,44)" fg:x="66" fg:w="1"/><text x="87.0921%" y="335.50"></text></g><g><title>CVEParser`fts5ModuleDestroy (1 samples, 1.32%)</title><rect x="86.8421%" y="309" width="1.3158%" height="15" fill="rgb(229,67,23)" fg:x="66" fg:w="1"/><text x="87.0921%" y="319.50"></text></g><g><title>CVEParser`sqlite3BtreeBeginTrans (1 samples, 1.32%)</title><rect x="88.1579%" y="165" width="1.3158%" height="15" fill="rgb(249,83,47)" fg:x="67" fg:w="1"/><text x="88.4079%" y="175.50"></text></g><g><title>CVEParser`sqlite3PagerSharedLock (1 samples, 1.32%)</title><rect x="88.1579%" y="149" width="1.3158%" height="15" fill="rgb(215,43,3)" fg:x="67" fg:w="1"/><text x="88.4079%" y="159.50"></text></g><g><title>libc.so.7`0x8013af39a (1 samples, 1.32%)</title><rect x="88.1579%" y="133" width="1.3158%" height="15" fill="rgb(238,154,13)" fg:x="67" fg:w="1"/><text x="88.4079%" y="143.50"></text></g><g><title>CVEParser`sqlite3InitCallback (1 samples, 1.32%)</title><rect x="89.4737%" y="149" width="1.3158%" height="15" fill="rgb(219,56,2)" fg:x="68" fg:w="1"/><text x="89.7237%" y="159.50"></text></g><g><title>CVEParser`sqlite3Prepare (1 samples, 1.32%)</title><rect x="89.4737%" y="133" width="1.3158%" height="15" fill="rgb(233,0,4)" fg:x="68" fg:w="1"/><text x="89.7237%" y="143.50"></text></g><g><title>CVEParser`sqlite3RunParser (1 samples, 1.32%)</title><rect x="89.4737%" y="117" width="1.3158%" height="15" fill="rgb(235,30,7)" fg:x="68" fg:w="1"/><text x="89.7237%" y="127.50"></text></g><g><title>CVEParser`rusqlite::inner_connection::InnerConnection::prepare (3 samples, 3.95%)</title><rect x="88.1579%" y="357" width="3.9474%" height="15" fill="rgb(250,79,13)" fg:x="67" fg:w="3"/><text x="88.4079%" y="367.50">CVEP..</text></g><g><title>CVEParser`sqlite3_prepare_v2 (3 samples, 3.95%)</title><rect x="88.1579%" y="341" width="3.9474%" height="15" fill="rgb(211,146,34)" fg:x="67" fg:w="3"/><text x="88.4079%" y="351.50">CVEP..</text></g><g><title>CVEParser`sqlite3LockAndPrepare (3 samples, 3.95%)</title><rect x="88.1579%" y="325" width="3.9474%" height="15" fill="rgb(228,22,38)" fg:x="67" fg:w="3"/><text x="88.4079%" y="335.50">CVEP..</text></g><g><title>CVEParser`sqlite3Prepare (3 samples, 3.95%)</title><rect x="88.1579%" y="309" width="3.9474%" height="15" fill="rgb(235,168,5)" fg:x="67" fg:w="3"/><text x="88.4079%" y="319.50">CVEP..</text></g><g><title>CVEParser`sqlite3RunParser (3 samples, 3.95%)</title><rect x="88.1579%" y="293" width="3.9474%" height="15" fill="rgb(221,155,16)" fg:x="67" fg:w="3"/><text x="88.4079%" y="303.50">CVEP..</text></g><g><title>CVEParser`yy_reduce (3 samples, 3.95%)</title><rect x="88.1579%" y="277" width="3.9474%" height="15" fill="rgb(215,215,53)" fg:x="67" fg:w="3"/><text x="88.4079%" y="287.50">CVEP..</text></g><g><title>CVEParser`sqlite3Select (3 samples, 3.95%)</title><rect x="88.1579%" y="261" width="3.9474%" height="15" fill="rgb(223,4,10)" fg:x="67" fg:w="3"/><text x="88.4079%" y="271.50">CVEP..</text></g><g><title>CVEParser`sqlite3SelectPrep (3 samples, 3.95%)</title><rect x="88.1579%" y="245" width="3.9474%" height="15" fill="rgb(234,103,6)" fg:x="67" fg:w="3"/><text x="88.4079%" y="255.50">CVEP..</text></g><g><title>CVEParser`sqlite3WalkSelect (3 samples, 3.95%)</title><rect x="88.1579%" y="229" width="3.9474%" height="15" fill="rgb(227,97,0)" fg:x="67" fg:w="3"/><text x="88.4079%" y="239.50">CVEP..</text></g><g><title>CVEParser`selectExpander (3 samples, 3.95%)</title><rect x="88.1579%" y="213" width="3.9474%" height="15" fill="rgb(234,150,53)" fg:x="67" fg:w="3"/><text x="88.4079%" y="223.50">CVEP..</text></g><g><title>CVEParser`sqlite3LocateTable (3 samples, 3.95%)</title><rect x="88.1579%" y="197" width="3.9474%" height="15" fill="rgb(228,201,54)" fg:x="67" fg:w="3"/><text x="88.4079%" y="207.50">CVEP..</text></g><g><title>CVEParser`sqlite3InitOne (3 samples, 3.95%)</title><rect x="88.1579%" y="181" width="3.9474%" height="15" fill="rgb(222,22,37)" fg:x="67" fg:w="3"/><text x="88.4079%" y="191.50">CVEP..</text></g><g><title>CVEParser`sqlite3_exec (2 samples, 2.63%)</title><rect x="89.4737%" y="165" width="2.6316%" height="15" fill="rgb(237,53,32)" fg:x="68" fg:w="2"/><text x="89.7237%" y="175.50">CV..</text></g><g><title>CVEParser`sqlite3_step (1 samples, 1.32%)</title><rect x="90.7895%" y="149" width="1.3158%" height="15" fill="rgb(233,25,53)" fg:x="69" fg:w="1"/><text x="91.0395%" y="159.50"></text></g><g><title>CVEParser`sqlite3VdbeExec (1 samples, 1.32%)</title><rect x="90.7895%" y="133" width="1.3158%" height="15" fill="rgb(210,40,34)" fg:x="69" fg:w="1"/><text x="91.0395%" y="143.50"></text></g><g><title>CVEParser`btreeNext (1 samples, 1.32%)</title><rect x="90.7895%" y="117" width="1.3158%" height="15" fill="rgb(241,220,44)" fg:x="69" fg:w="1"/><text x="91.0395%" y="127.50"></text></g><g><title>CVEParser`getAndInitPage (1 samples, 1.32%)</title><rect x="90.7895%" y="101" width="1.3158%" height="15" fill="rgb(235,28,35)" fg:x="69" fg:w="1"/><text x="91.0395%" y="111.50"></text></g><g><title>CVEParser`getPageNormal (1 samples, 1.32%)</title><rect x="90.7895%" y="85" width="1.3158%" height="15" fill="rgb(210,56,17)" fg:x="69" fg:w="1"/><text x="91.0395%" y="95.50"></text></g><g><title>CVEParser`readDbPage (1 samples, 1.32%)</title><rect x="90.7895%" y="69" width="1.3158%" height="15" fill="rgb(224,130,29)" fg:x="69" fg:w="1"/><text x="91.0395%" y="79.50"></text></g><g><title>CVEParser`unixRead (1 samples, 1.32%)</title><rect x="90.7895%" y="53" width="1.3158%" height="15" fill="rgb(235,212,8)" fg:x="69" fg:w="1"/><text x="91.0395%" y="63.50"></text></g><g><title>libc.so.7`_read (1 samples, 1.32%)</title><rect x="90.7895%" y="37" width="1.3158%" height="15" fill="rgb(223,33,50)" fg:x="69" fg:w="1"/><text x="91.0395%" y="47.50"></text></g><g><title>CVEParser`std::rt::lang_start_internal (1 samples, 1.32%)</title><rect x="92.1053%" y="341" width="1.3158%" height="15" fill="rgb(219,149,13)" fg:x="70" fg:w="1"/><text x="92.3553%" y="351.50"></text></g><g><title>CVEParser`std::sys::unix::init (1 samples, 1.32%)</title><rect x="93.4211%" y="341" width="1.3158%" height="15" fill="rgb(250,156,29)" fg:x="71" fg:w="1"/><text x="93.6711%" y="351.50"></text></g><g><title>`0x801258008 (3 samples, 3.95%)</title><rect x="92.1053%" y="357" width="3.9474%" height="15" fill="rgb(216,193,19)" fg:x="70" fg:w="3"/><text x="92.3553%" y="367.50">`0x8..</text></g><g><title>CVEParser`std::sys::unix::os::setenv (1 samples, 1.32%)</title><rect x="94.7368%" y="341" width="1.3158%" height="15" fill="rgb(216,135,14)" fg:x="72" fg:w="1"/><text x="94.9868%" y="351.50"></text></g><g><title>libc.so.7`setenv (1 samples, 1.32%)</title><rect x="94.7368%" y="325" width="1.3158%" height="15" fill="rgb(241,47,5)" fg:x="72" fg:w="1"/><text x="94.9868%" y="335.50"></text></g><g><title>libc.so.7`0x801443390 (1 samples, 1.32%)</title><rect x="94.7368%" y="309" width="1.3158%" height="15" fill="rgb(233,42,35)" fg:x="72" fg:w="1"/><text x="94.9868%" y="319.50"></text></g><g><title>libc.so.7`memcmp (1 samples, 1.32%)</title><rect x="96.0526%" y="357" width="1.3158%" height="15" fill="rgb(231,13,6)" fg:x="73" fg:w="1"/><text x="96.3026%" y="367.50"></text></g><g><title>all (76 samples, 100%)</title><rect x="0.0000%" y="373" width="100.0000%" height="15" fill="rgb(207,181,40)" fg:x="0" fg:w="76"/><text x="0.2500%" y="383.50"></text></g><g><title>libc.so.7`memcpy (2 samples, 2.63%)</title><rect x="97.3684%" y="357" width="2.6316%" height="15" fill="rgb(254,173,49)" fg:x="74" fg:w="2"/><text x="97.6184%" y="367.50">li..</text></g></svg></svg>